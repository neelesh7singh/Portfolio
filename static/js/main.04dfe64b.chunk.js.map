{"version":3,"sources":["components/background.jsx","components/banner.jsx","components/intro.jsx","components/works.jsx","components/skill.jsx","components/contact.jsx","components/preloader.jsx","cursor.js","utils.js","pages/homePage.jsx","pages/project.jsx","App.js","serviceWorker.js","index.js"],"names":["Background","className","params","Banner","h","useRef","i","portfolio","useEffect","TweenMax","from","y","opacity","ease","delay","staggerFrom","ref","el","Intro","Aos","init","duration","data-aos","Works","props","exitdiv","handleClick","project","console","log","classList","remove","exitAnimation","window","setTimeout","history","push","to","display","width","onClick","Skill","height","viewBox","fill","xmlns","clip-path","d","id","fill-rule","clip-rule","x1","y1","x2","y2","gradientUnits","stop-color","offset","Contact","href","rel","target","Preloader","line","loader","x","mouse","addEventListener","ev","e","posx","posy","event","clientX","clientY","getMousePos","Cursor","this","style","cursorConfigs","previous","current","amt","onMouseMoveEv","Power3","easeOut","requestAnimationFrame","render","removeEventListener","a","b","n","key","transform","HomePage","c","app","Project","heading","about","code","website","whiteDiv","App","project1","project2","project3","exact","path","component","Boolean","location","hostname","match","ReactDOM","basename","process","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.04dfe64b.chunk.js","sourcesContent":["import React from 'react'\nimport Particles from 'react-particles-js';\nimport '../styles/background.scss';\n\nfunction Background() {\n    return (\n    <Particles\n    className=\"particles\"\n    params={{\n        \"particles\": {\n        \"number\": {\n            \"value\": 40,\n            \"density\": {\n            \"enable\": true,\n            \"value_area\": 1500\n            }\n        },\n        \"color\": {\n            \"value\": \"#ffffff\"\n        },\n        \"shape\": {\n            \"type\": \"circle\",\n            \"stroke\": {\n            \"width\": 0,\n            \"color\": \"#000000\"\n            },\n            \"polygon\": {\n            \"nb_sides\": 5\n            },\n            \"image\": {\n            \"src\": \"img/github.svg\",\n            \"width\": 100,\n            \"height\": 100\n            }\n        },\n        \"opacity\": {\n            \"value\": 1,\n            \"random\": true,\n            \"anim\": {\n            \"enable\": true,\n            \"speed\": 1,\n            \"opacity_min\": 0,\n            \"sync\": false\n            }\n        },\n        \"size\": {\n            \"value\": 2,\n            \"random\": true,\n            \"anim\": {\n            \"enable\": false,\n            \"speed\": 4,\n            \"size_min\": 0.3,\n            \"sync\": false\n            }\n        },\n        \"line_linked\": {\n            \"enable\": false,\n            \"distance\": 150,\n            \"color\": \"#ffffff\",\n            \"opacity\": 0.4,\n            \"width\": 1\n        },\n        \"move\": {\n            \"enable\": true,\n            \"speed\": 1,\n            \"direction\": \"none\",\n            \"random\": true,\n            \"straight\": false,\n            \"out_mode\": \"out\",\n            \"bounce\": false,\n            \"attract\": {\n            \"enable\": false,\n            \"rotateX\": 600,\n            \"rotateY\": 600\n            }\n        }\n        },\n        \"interactivity\": {\n        \"detect_on\": \"window\",\n        \"events\": {\n            \"onhover\": {\n            \"enable\": true,\n            \"mode\": \"bubble\"\n            },\n            \"onclick\": {\n            \"enable\": true,\n            \"mode\": \"repulse\"\n            },\n            \"resize\": true\n        },\n        \"modes\": {\n            \"grab\": {\n            \"distance\": 400,\n            \"line_linked\": {\n                \"opacity\": 1\n            }\n            },\n            \"bubble\": {\n            \"distance\": 250,\n            \"size\": 0,\n            \"duration\": 2,\n            \"opacity\": 0,\n            \"speed\": 3\n            },\n            \"repulse\": {\n            \"distance\": 400,\n            \"duration\": 0.4\n            },\n            \"push\": {\n            \"particles_nb\": 4\n            },\n            \"remove\": {\n            \"particles_nb\": 2\n            }\n        }\n        },\n        \"retina_detect\": true\n    }} />\n    )\n}\n\nexport default Background\n","import React, {useRef, useEffect} from 'react'\nimport { TweenMax } from \"gsap\";\nimport '../styles/banner.scss'\n\n\nconst Banner = () => {\n    let h = useRef(null);\n    let i = useRef(null);\n    let portfolio = useRef(null);\n    useEffect(() => {\n        TweenMax.from(portfolio, 1.5, {y: -100, opacity: 0, ease: \"power4.out\", delay:2.2});\n        TweenMax.staggerFrom(\n            [h, i],\n            1,\n            { opacity: 0, y: 400, ease: \"power4.out\", delay:2.2},\n            0.07\n          );\n    },[])\n    return (\n        <>\n        <div className = 'banner'>\n        <div className = \"top-bar\" ref = {(el) => (portfolio = el)}>\n            <p >Portfolio.</p>\n        </div>\n        <div className = \"hi\">\n            <h1 ref={(el) => (h = el)}>H</h1>\n            <h1 ref={(el) => (i = el)}>I</h1>\n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default Banner\n","import React, { useEffect } from 'react'\nimport Aos from 'aos';\nimport 'aos/dist/aos.css'\nimport '../styles/intro.scss'\n\nconst Intro = () => {\n    useEffect(() => {\n        Aos.init({duration:1000});\n    },[])\n    return (\n        <div data-aos='fade-up' className = 'intro'>\n            <p className ='part-1'>\n            I’m Neelesh Singh, a bachelors student in Computer Science. An innovative Web Developer and Open Source Contributor.\n            </p>\n        </div>\n    )\n}\n\nexport default Intro","import React, {useEffect, useRef} from 'react';\nimport { TweenMax } from \"gsap\";\nimport Aos from 'aos';\nimport 'aos/dist/aos.css'\nimport '../styles/works.scss'\n\nfunction Works(props) {\n    let exitdiv = useRef(null);\n    const handleClick = (project) => {\n        console.log(props);\n            exitdiv.classList.remove('App');\n            exitAnimation();\n            window.setTimeout(()=>{props.history.push(`/${project}`)}, 600)\n        \n    }\n    const exitAnimation = () => {\n        TweenMax.to(exitdiv, 0, {opacity:1, display:'static'});\n        TweenMax.to(exitdiv, .6, {width:'100vw', ease: 'power3.inOut'});\n    }\n\n    useEffect(() => {\n        Aos.init({duration:1000});\n    },[])\n    return (\n        <>\n            <div className=\"exitdiv\" ref={(el) => {exitdiv = el}}/>\n            <div className= 'workSection'>\n                <div data-aos='fade-up' className= 'line'></div>\n                <h3 data-aos='fade-up' className= 'title'>MY WORK</h3>\n                <div data-aos='fade-up-right' className = 'project'>\n                <h2 className = 'project-title' onClick={() => handleClick('project1')}>Pathfinding Visualizer</h2>\n                <p className = 'project-skills scroll'>\n                    HTML &nbsp;&nbsp;&nbsp; \n                    CSS &nbsp;&nbsp;&nbsp; \n                    JAVASCRIPT &nbsp;&nbsp;&nbsp; \n                    JQUERY &nbsp;&nbsp;&nbsp; \n                    PATHFINDING ALGORITHMS\n                </p>\n                </div>\n                    <div data-aos='fade-up-left' className = 'project right'>\n                    <h2 className = 'project-title' onClick={() => handleClick('project2')}>Flappy Bird AI</h2>\n                    <p className = 'project-skills scroll'>\n                        HTML &nbsp;&nbsp;&nbsp; \n                        CSS &nbsp;&nbsp;&nbsp; \n                        JAVASCRIPT &nbsp;&nbsp;&nbsp; \n                        p5.js &nbsp;&nbsp;&nbsp; \n                        NEURAL NETWORK &nbsp;&nbsp;&nbsp; \n                        GENETIC ALGORITHMS\n                    </p>\n                    </div>\n                    <div data-aos='fade-up-right' className = 'project'>\n                    <h2 className = 'project-title' onClick={() => handleClick('project2')}>2D Self-Driving Car</h2>\n                    <p className = 'project-skills scroll'>\n                        HTML &nbsp;&nbsp;&nbsp; \n                        CSS &nbsp;&nbsp;&nbsp; \n                        JAVASCRIPT &nbsp;&nbsp;&nbsp; \n                        p5.js &nbsp;&nbsp;&nbsp; \n                        TENSORFLOW.js &nbsp;&nbsp;&nbsp; \n                        GENETIC ALGORITHMS\n                    </p>\n                    </div>\n            </div>\n        </>\n    )\n}\n\nexport default Works","import React, {useEffect} from 'react'\nimport Aos from 'aos';\nimport 'aos/dist/aos.css'\nimport '../styles/skill.scss'\n\nfunction Skill() {\n    useEffect(() => {\n        Aos.init({duration:1000});\n    },[])\n    return (\n        <div className = 'skillSection'>\n            <div data-aos='fade-up' className = 'line-right'/>\n            <h3 data-aos='fade-up' className= 'title'>SKILLS</h3>\n            <div data-aos='fade-up' className = 'skill-about'>\n                <p>\n                I’m a full stack developer with knowledge in different technologies. If I don’t know something I always try to wrap my head around quickly.\n                </p>\n            </div>\n            <div data-aos='fade-up' className = 'skill-svg'>\n            {/* c++ */}\n            <svg width=\"105\" height=\"118\" viewBox=\"0 0 105 118\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g clip-path=\"url(#clip0)\">\n            <path d=\"M52.5 93.9527C33.2009 93.9527 17.5 78.273 17.5 58.9999C17.5 39.7269 33.2009 24.0471 52.5 24.0471C64.9531 24.0471 76.5673 30.7396 82.8097 41.5126L67.6626 50.2658C64.5383 44.8735 58.7279 41.5235 52.5 41.5235C42.8503 41.5235 35 49.3632 35 58.9999C35 68.6363 42.8503 76.4763 52.5 76.4763C58.7286 76.4763 64.539 73.1263 67.6636 67.733L82.8107 76.4859C76.5683 87.2599 64.9538 93.9527 52.5 93.9527Z\" fill=\"white\"/>\n            <path d=\"M87.5 57.0581H83.6109V53.1746H79.7224V57.0581H75.8333V60.9416H79.7224V64.8255H83.6109V60.9416H87.5V57.0581Z\" fill=\"white\"/>\n            <path d=\"M102.083 57.0581H98.1942V53.1746H94.3058V57.0581H90.4167V60.9416H94.3058V64.8255H98.1942V60.9416H102.083V57.0581Z\" fill=\"white\"/>\n            </g>\n            <defs>\n            <clipPath id=\"clip0\">\n            <rect width=\"105\" height=\"118\" fill=\"white\"/>\n            </clipPath>\n            </defs>\n            </svg>\n            {/* node */}\n            <svg width=\"199\" height=\"199\" viewBox=\"0 0 199 199\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M98.4895 144.257C98.0053 144.257 97.5237 144.13 97.0998 143.885L92.6761 141.267C92.0157 140.898 92.3381 140.767 92.556 140.691C93.4372 140.385 93.6157 140.314 94.5563 139.781C94.6541 139.726 94.7841 139.747 94.8853 139.806L98.2839 141.824C98.4069 141.892 98.5807 141.892 98.6941 141.824L111.944 134.176C112.068 134.106 112.147 133.964 112.147 133.818V118.527C112.147 118.377 112.068 118.237 111.941 118.161L98.6965 110.52C98.5741 110.449 98.4116 110.449 98.2882 110.52L85.0471 118.164C84.9184 118.237 84.8368 118.382 84.8368 118.527V133.818C84.8368 133.964 84.9184 134.103 85.0457 134.172L88.6755 136.269C90.6449 137.254 91.8509 136.094 91.8509 134.929V119.832C91.8509 119.618 92.0223 119.45 92.2359 119.45H93.9158C94.1261 119.45 94.2999 119.618 94.2999 119.832V134.929C94.2999 137.557 92.8684 139.065 90.3766 139.065C89.6108 139.065 89.0078 139.065 87.3246 138.235L83.8501 136.235C82.9917 135.739 82.4604 134.811 82.4604 133.818V118.527C82.4604 117.533 82.9917 116.606 83.8501 116.112L97.0998 108.455C97.9383 107.981 99.0527 107.981 99.8845 108.455L113.134 116.112C113.992 116.608 114.525 117.533 114.525 118.527V133.818C114.525 134.811 113.992 135.735 113.134 136.235L99.8845 143.885C99.461 144.13 98.9804 144.257 98.4895 144.257Z\" fill=\"white\"/>\n            <path d=\"M102.582 133.722C96.7841 133.722 95.5695 131.061 95.5695 128.828C95.5695 128.616 95.74 128.446 95.9523 128.446H97.6654C97.8567 128.446 98.0163 128.584 98.0461 128.771C98.3048 130.515 99.0759 131.395 102.582 131.395C105.374 131.395 106.562 130.763 106.562 129.283C106.562 128.429 106.225 127.795 101.887 127.37C98.2617 127.012 96.0193 126.211 96.0193 123.311C96.0193 120.637 98.2726 119.043 102.051 119.043C106.296 119.043 108.396 120.516 108.662 123.677C108.672 123.786 108.634 123.89 108.561 123.972C108.488 124.048 108.387 124.094 108.28 124.094H106.561C106.383 124.094 106.225 123.967 106.189 123.794C105.776 121.959 104.773 121.373 102.051 121.373C99.0033 121.373 98.6491 122.435 98.6491 123.23C98.6491 124.194 99.067 124.474 103.182 125.019C107.254 125.557 109.188 126.319 109.188 129.181C109.188 132.068 106.781 133.722 102.582 133.722Z\" fill=\"white\"/>\n            <path d=\"M118.716 117.509H119.162C119.526 117.509 119.594 117.253 119.594 117.104C119.594 116.712 119.324 116.712 119.175 116.712H118.716V117.509ZM118.175 116.253H119.162C119.5 116.253 120.162 116.253 120.162 117.01C120.162 117.537 119.824 117.645 119.621 117.712C120.014 117.739 120.04 117.996 120.094 118.361C120.121 118.59 120.162 118.983 120.242 119.117H119.635C119.621 118.983 119.526 118.253 119.526 118.213C119.487 118.05 119.431 117.969 119.229 117.969H118.73V119.117H118.175V116.253ZM116.993 117.678C116.993 118.868 117.953 119.827 119.128 119.827C120.317 119.827 121.277 118.847 121.277 117.678C121.277 116.49 120.304 115.544 119.128 115.544C117.966 115.544 116.993 116.476 116.993 117.678ZM121.688 117.686C121.688 119.09 120.539 120.239 119.135 120.239C117.743 120.239 116.581 119.104 116.581 117.686C116.581 116.24 117.77 115.131 119.135 115.131C120.513 115.131 121.688 116.24 121.688 117.686Z\" fill=\"white\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M57.4589 84.4314C57.4589 83.8208 57.1375 83.2597 56.6105 82.9572L42.5627 74.8728C42.3253 74.7328 42.0589 74.6602 41.7896 74.6493H41.6443C41.3757 74.6602 41.1097 74.7328 40.8686 74.8728L26.8208 82.9572C26.2971 83.2597 25.9714 83.8208 25.9714 84.4314L26.0023 106.2C26.0023 106.503 26.1595 106.785 26.4258 106.933C26.6865 107.09 27.0089 107.09 27.2686 106.933L35.6173 102.153C36.1453 101.839 36.4667 101.286 36.4667 100.68V90.5102C36.4667 89.9039 36.7878 89.3428 37.3138 89.0413L40.8686 86.9939C41.1336 86.841 41.4231 86.766 41.719 86.766C42.0085 86.766 42.3054 86.841 42.5627 86.9939L46.1165 89.0413C46.6426 89.3428 46.9649 89.9039 46.9649 90.5102V100.68C46.9649 101.286 47.2906 101.843 47.8153 102.153L56.1617 106.933C56.4234 107.09 56.7504 107.09 57.0098 106.933C57.2685 106.785 57.4314 106.503 57.4314 106.2L57.4589 84.4314Z\" fill=\"white\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M123.748 95.7666C123.748 95.9178 123.667 96.0581 123.536 96.1334L118.711 98.9148C118.58 98.99 118.418 98.99 118.287 98.9148L113.462 96.1334C113.33 96.0581 113.25 95.9178 113.25 95.7666V90.1949C113.25 90.0437 113.33 89.9034 113.462 89.8274L118.286 87.0408C118.418 86.9648 118.58 86.9648 118.711 87.0408L123.536 89.8274C123.667 89.9034 123.748 90.0437 123.748 90.1949V95.7666ZM125.052 54.5063C124.789 54.3603 124.468 54.3633 124.208 54.5159C123.949 54.6681 123.79 54.9467 123.79 55.2475V76.8059C123.79 77.0178 123.676 77.2141 123.493 77.3203C123.31 77.4264 123.083 77.4264 122.899 77.3203L119.381 75.2931C118.856 74.9903 118.21 74.991 117.685 75.2935L103.632 83.4037C103.107 83.7068 102.783 84.267 102.783 84.8733V101.097C102.783 101.703 103.107 102.263 103.631 102.567L117.684 110.683C118.209 110.986 118.856 110.986 119.382 110.683L133.437 102.567C133.961 102.263 134.285 101.703 134.285 101.097V60.655C134.285 60.0401 133.952 59.473 133.415 59.1731L125.052 54.5063Z\" fill=\"white\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M171.847 90.0492C172.369 89.7457 172.691 89.1865 172.691 88.5819V84.6503C172.691 84.0457 172.369 83.4862 171.846 83.1827L157.883 75.0758C157.358 74.7703 156.71 74.77 156.183 75.0734L142.135 83.1837C141.61 83.4868 141.286 84.0467 141.286 84.653V100.872C141.286 101.483 141.614 102.046 142.143 102.347L156.104 110.302C156.619 110.596 157.25 110.599 157.768 110.311L166.212 105.618C166.48 105.469 166.647 105.188 166.649 104.882C166.651 104.576 166.488 104.293 166.223 104.14L152.086 96.0262C151.822 95.8749 151.659 95.5937 151.659 95.2902V90.2071C151.659 89.9039 151.821 89.6233 152.084 89.4721L156.484 86.9355C156.746 86.7843 157.069 86.7843 157.331 86.9355L161.733 89.4721C161.996 89.6233 162.157 89.9039 162.157 90.2071V94.2063C162.157 94.5101 162.32 94.7907 162.583 94.9419C162.846 95.0938 163.17 95.0925 163.432 94.9403L171.847 90.0492Z\" fill=\"white\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M156.826 89.2895C156.927 89.2311 157.051 89.2311 157.152 89.2895L159.848 90.845C159.949 90.9034 160.011 91.0108 160.011 91.1272V94.2409C160.011 94.3577 159.949 94.4648 159.848 94.5232L157.152 96.079C157.051 96.1374 156.927 96.1374 156.826 96.079L154.132 94.5232C154.031 94.4648 153.969 94.3577 153.969 94.2409V91.1272C153.969 91.0108 154.031 90.9034 154.132 90.845L156.826 89.2895Z\" fill=\"white\"/>\n            <path d=\"M79.1874 75.245L65.2508 83.2892C64.7294 83.5897 64.4087 84.1456 64.4087 84.7469V100.849C64.4087 101.45 64.7294 102.006 65.2501 102.307L79.1867 110.358C79.7078 110.659 80.3499 110.659 80.8713 110.358L94.8109 102.307C95.3319 102.006 95.6526 101.45 95.6526 100.849V84.7476C95.6526 84.1456 95.3319 83.5897 94.8105 83.2892L80.8706 75.245C80.6102 75.0944 80.3197 75.0195 80.0288 75.0195C79.7383 75.0195 79.4474 75.0944 79.1874 75.245Z\" fill=\"url(#paint0_linear)\"/>\n            <g opacity=\"0.660004\">\n            <g opacity=\"0.660004\">\n            <path opacity=\"0.660004\" d=\"M94.7402 83.2891L80.8622 75.2445C80.7233 75.1642 80.5747 75.1072 80.4221 75.0697L64.7356 101.904C64.8676 102.063 65.0268 102.201 65.2092 102.307L79.1701 110.358C79.5863 110.598 80.0679 110.643 80.511 110.5L95.1667 83.6632C95.0519 83.5166 94.9116 83.3879 94.7402 83.2891Z\" fill=\"#4B4B4B\"/>\n            </g>\n            </g>\n            <path d=\"M79.9283 75.0224C79.6726 75.0383 79.4199 75.1126 79.1907 75.245L65.3838 83.2123L80.3827 110.537C80.5396 110.499 80.6928 110.442 80.8381 110.358L94.7449 102.307C95.2653 102.006 95.52 101.45 95.52 100.849V100.786L80.4756 75.0838C80.3247 75.0416 80.1691 75.0204 80.0139 75.0204C79.9854 75.0204 79.9569 75.0211 79.9283 75.0224Z\" fill=\"url(#paint1_linear)\"/>\n            <defs>\n            <linearGradient id=\"paint0_linear\" x1=\"64.4084\" y1=\"92.8014\" x2=\"95.6527\" y2=\"92.8014\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color=\"white\"/>\n            <stop offset=\"0.00530134\" stop-color=\"white\"/>\n            <stop offset=\"0.725388\" stop-color=\"#AFB1B3\"/>\n            <stop offset=\"1\" stop-color=\"#AFB1B3\"/>\n            </linearGradient>\n            <linearGradient id=\"paint1_linear\" x1=\"64.1924\" y1=\"92.7785\" x2=\"96.4231\" y2=\"92.7785\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color=\"#AFB1B3\"/>\n            <stop offset=\"0.274612\" stop-color=\"#AFB1B3\"/>\n            <stop offset=\"0.994699\" stop-color=\"white\"/>\n            <stop offset=\"1\" stop-color=\"white\"/>\n            </linearGradient>\n            </defs>\n            </svg>\n            {/* express */}\n            <svg width=\"178\" height=\"89\" viewBox=\"0 0 178 89\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M59.3333 61.9336V27.7501H61.1875V33.1272C61.4064 32.8888 61.6087 32.6355 61.7927 32.3692C63.3413 29.1563 66.6076 27.1286 70.1735 27.1687C74.401 27.0426 77.8364 28.6075 79.8552 32.3692C81.1399 34.7062 81.8469 37.3166 81.917 39.9824C81.9872 42.6483 81.4186 45.2922 80.2587 47.6936C78.3778 51.9092 73.732 54.0051 68.7584 53.2353C67.2106 53.1037 65.7204 52.5865 64.4238 51.731C63.1272 50.8754 62.0656 49.7087 61.3358 48.3373V61.9321L59.3333 61.9336ZM61.1875 39.8423L61.6028 43.8562C62.3356 48.4248 65.0367 51.1245 69.2776 51.6318C71.2691 51.9592 73.3126 51.5859 75.0597 50.5753C76.8067 49.5648 78.1493 47.9797 78.8584 46.0901C80.5079 42.1592 80.3863 37.7092 78.5321 33.8704C77.7752 32.1765 76.4876 30.7751 74.8637 29.8778C73.2399 28.9805 71.3681 28.6361 69.5312 28.8968C67.8071 29.0222 66.1648 29.6815 64.8324 30.7831C63.5001 31.8846 62.544 33.3738 62.0968 35.0437C61.7019 36.624 61.3983 38.2256 61.1875 39.8408V39.8423ZM119.776 44.4881C119.495 46.8949 118.349 49.1177 116.552 50.743C114.755 52.3684 112.428 53.2857 110.005 53.3243C102.23 53.7159 98.5808 48.5524 98.0009 42.5939C97.5975 39.3581 98.1228 36.0743 99.5153 33.1257C100.485 31.1031 102.073 29.4414 104.049 28.3816C106.026 27.3218 108.289 26.9188 110.51 27.231C112.621 27.4105 114.623 28.2494 116.231 29.6292C117.84 31.0089 118.973 32.8595 119.472 34.9191C119.867 36.7953 120.158 38.6919 120.343 40.6003H99.9218C99.5435 46.0026 102.446 50.3458 106.561 51.393C111.686 52.6538 116.066 50.4333 117.657 45.5605C118.01 44.3101 118.653 44.1336 119.79 44.4881H119.776ZM99.9069 38.8707H118.173C118.058 33.1154 114.475 28.9324 109.614 28.8849C104.126 28.7959 100.146 32.8113 99.9069 38.8707ZM123.551 44.6142H125.342C125.407 45.9332 125.836 47.2085 126.58 48.2998C127.323 49.3911 128.354 50.2561 129.557 50.7997C131.069 51.4798 132.714 51.8103 134.371 51.7667C136.027 51.723 137.653 51.3063 139.126 50.5475C139.929 50.1859 140.602 49.5864 141.054 48.8301C141.505 48.0738 141.714 47.1971 141.651 46.3185C141.697 45.4712 141.466 44.6319 140.992 43.9279C140.518 43.2239 139.828 42.6936 139.025 42.4173C137.056 41.6846 134.961 41.2811 132.954 40.6373C130.866 40.0428 128.824 39.2961 126.844 38.4034C123.611 36.8252 123.41 30.6782 127.071 28.7321C128.946 27.6744 131.055 27.1028 133.207 27.0697C135.359 27.0365 137.486 27.5428 139.392 28.5422C141.756 29.8476 143.063 32.4835 142.674 35.1579H141.139C141.139 35.0837 141 35.0185 141 34.9428C140.81 30.0478 136.695 28.517 132.278 28.9472C130.943 29.0955 129.677 29.499 128.491 30.0953C127.777 30.4211 127.183 30.9605 126.79 31.639C126.396 32.3174 126.224 33.1013 126.295 33.8822C126.297 34.6637 126.54 35.4256 126.993 36.0631C127.445 36.7006 128.083 37.1824 128.82 37.4422C130.748 38.1498 132.795 38.6037 134.79 39.1585L139.611 40.4193C140.707 40.779 141.668 41.4627 142.367 42.3802C143.065 43.2977 143.469 44.4057 143.524 45.5576C143.91 48.146 142.59 50.6899 140.255 51.8691C136.039 54.2543 129.096 53.6239 126.003 50.6083C124.421 49.0167 123.538 46.8555 123.556 44.6127L123.551 44.6142ZM166.242 35.1594H164.562C164.562 34.9324 164.473 34.7144 164.448 34.5408C164.421 33.2822 163.963 32.071 163.149 31.1104C162.335 30.1498 161.216 29.4981 159.979 29.2646C157.645 28.5953 155.156 28.7152 152.898 29.6058C152.005 29.8614 151.218 30.3991 150.656 31.1387C150.094 31.8782 149.787 32.7799 149.78 33.7087C149.748 34.6207 150.032 35.5158 150.584 36.2426C151.135 36.9694 151.921 37.4833 152.809 37.6974L160.483 39.6672C161.313 39.8663 162.131 40.115 162.931 40.4119C165.378 41.3019 167.04 43.5743 167.114 46.1717C167.151 47.443 166.802 48.6957 166.113 49.7652C165.425 50.8348 164.429 51.6711 163.257 52.1643C161.476 52.9735 159.545 53.4016 157.589 53.4213C155.632 53.4409 153.694 53.0517 151.896 52.2785C150.418 51.6412 149.171 50.5664 148.322 49.1987C147.474 47.8311 147.064 46.2363 147.15 44.629H148.79C149.407 47.6031 151.45 50.0802 154.252 51.2521C157.054 52.4239 160.253 52.1361 162.802 50.4867C163.566 50.0891 164.201 49.4807 164.631 48.7336C165.06 47.9864 165.267 47.1319 165.226 46.271C165.264 45.4231 165.024 44.5859 164.543 43.8865C164.062 43.187 163.367 42.6634 162.561 42.3951C160.592 41.6623 158.497 41.2722 156.49 40.6151C154.39 40.0297 152.336 39.2915 150.343 38.4064C147.187 36.8534 146.935 30.7569 150.533 28.8122C152.431 27.7101 154.581 27.118 156.776 27.0935C158.97 27.0691 161.134 27.6132 163.055 28.6728C164.155 29.3288 165.039 30.2903 165.602 31.4401C166.164 32.59 166.381 33.8786 166.224 35.149L166.242 35.1594ZM56.2821 52.7072C55.6212 52.9572 54.8916 52.9565 54.2311 52.7054C53.5706 52.4542 53.0248 51.97 52.6969 51.344L46.1702 42.318L45.2239 41.0571L37.65 51.3574C37.3413 51.9564 36.8251 52.4226 36.1978 52.6688C35.5705 52.915 34.875 52.9245 34.2413 52.6954L43.9986 39.6049L34.9206 27.7768C36.2675 27.2903 37.7686 27.8184 38.5177 29.0377L45.2817 38.175L52.0858 29.0733C52.3968 28.4845 52.9133 28.0306 53.5371 27.7979C54.161 27.5651 54.8486 27.5698 55.4692 27.811L51.9463 32.4849L47.1744 38.6957C47.042 38.8139 46.936 38.9588 46.8635 39.1209C46.7909 39.283 46.7534 39.4585 46.7534 39.6361C46.7534 39.8137 46.7909 39.9892 46.8635 40.1513C46.936 40.3133 47.042 40.4583 47.1744 40.5765L56.2628 52.7072H56.2821ZM97.7116 27.6508V29.4308C96.4349 29.347 95.1548 29.5319 93.9539 29.9735C92.753 30.4151 91.6581 31.1036 90.7398 31.9945C89.8214 32.8854 89.1001 33.959 88.6224 35.146C88.1446 36.3329 87.9211 37.6068 87.9661 38.8855C87.9661 43.0428 87.9661 47.2001 87.9661 51.3574V52.771H86.1609V27.762H87.9409V32.8869C90.1244 29.1489 93.4945 27.762 97.7235 27.6611L97.7116 27.6508ZM10.8773 39.4418L11.6723 35.5154C13.8558 27.7516 22.7558 24.5209 28.879 29.3299C32.4642 32.1453 33.3587 36.1339 33.1836 40.6284H12.9851C12.6588 48.6562 18.4512 53.5038 25.8604 51.0296C28.302 50.1396 30.1398 48.1104 30.745 45.5887C31.1366 44.3279 31.7834 44.1113 32.9671 44.4762C32.7697 46.0131 32.2263 47.4853 31.378 48.782C30.5296 50.0787 29.3983 51.1661 28.0691 51.9626C25.8731 53.1636 23.3536 53.6394 20.8709 53.3221C18.3881 53.0048 16.0693 51.9106 14.2459 50.1959C12.4422 48.1682 11.3534 45.605 11.1413 42.8979C11.1413 42.4529 10.993 42.0376 10.8891 41.6371C10.8793 40.8885 10.8743 40.1567 10.8743 39.4418H10.8773ZM13.0103 38.8989H31.2761C31.1619 33.0798 27.4891 28.9516 22.5912 28.9131C17.1384 28.8389 13.2373 32.8765 12.997 38.8737L13.0103 38.8989Z\" fill=\"white\"/>\n            </svg>\n            {/* react */}\n            <svg width=\"146\" height=\"103\" viewBox=\"0 0 146 103\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M115.548 51.3012C115.548 45.6779 108.49 40.3489 97.6686 37.0441C100.166 26.0399 99.0559 17.285 94.1656 14.4821C93.0384 13.8246 91.7204 13.5132 90.281 13.5132V17.3715C91.0787 17.3715 91.7204 17.5273 92.258 17.8214C94.6165 19.171 95.6396 24.3097 94.8419 30.9192C94.6512 32.5456 94.339 34.2585 93.9575 36.006C90.5585 35.1755 86.8474 34.5353 82.9455 34.1201C80.6043 30.9192 78.1765 28.0124 75.7313 25.469C81.3847 20.2264 86.6913 17.3542 90.2984 17.3542V13.4958C85.5294 13.4958 79.2864 16.8871 72.974 22.7698C66.6616 16.9217 60.4186 13.5651 55.6496 13.5651V17.4234C59.2393 17.4234 64.5632 20.2783 70.2167 25.4863C67.7888 28.0297 65.361 30.9192 63.0545 34.1201C59.1353 34.5353 55.4242 35.1755 52.0252 36.0233C51.6263 34.2931 51.3315 32.6148 51.1234 31.0057C50.3083 24.3962 51.3142 19.2575 53.6553 17.8906C54.1756 17.5792 54.8519 17.4408 55.6496 17.4408V13.5824C54.1929 13.5824 52.8749 13.8938 51.7304 14.5513C46.8573 17.3542 45.7648 26.0919 48.2794 37.0614C37.4928 40.3835 30.4694 45.6952 30.4694 51.3012C30.4694 56.9244 37.5275 62.2535 48.3487 65.5582C45.8515 76.5624 46.9614 85.3173 51.8518 88.1202C52.979 88.7777 54.2969 89.0892 55.7536 89.0892C60.5226 89.0892 66.7656 85.6979 73.078 79.8152C79.3904 85.6633 85.6334 89.02 90.4024 89.02C91.8591 89.02 93.1771 88.7085 94.3217 88.051C99.1947 85.2481 100.287 76.5105 97.7727 65.5409C108.525 62.2361 115.548 56.9071 115.548 51.3012ZM92.969 39.7606C92.3274 41.9926 91.5296 44.2938 90.6279 46.595C89.9169 45.2108 89.1712 43.8266 88.3561 42.4424C87.5584 41.0583 86.7086 39.7087 85.8589 38.3937C88.3214 38.7571 90.6972 39.2069 92.969 39.7606ZM85.0265 58.1874C83.6738 60.5232 82.2865 62.7379 80.8471 64.7969C78.2632 65.0218 75.6446 65.1429 73.0087 65.1429C70.3901 65.1429 67.7715 65.0218 65.2049 64.8142C63.7655 62.7552 62.3608 60.5578 61.0082 58.2393C59.6902 55.9728 58.4936 53.6716 57.4011 51.3531C58.4763 49.0346 59.6902 46.7161 60.9909 44.4495C62.3435 42.1137 63.7308 39.899 65.1702 37.84C67.7541 37.6151 70.3727 37.494 73.0087 37.494C75.6273 37.494 78.2459 37.6151 80.8124 37.8227C82.2518 39.8817 83.6565 42.0791 85.0091 44.3976C86.3271 46.6642 87.5237 48.9654 88.6162 51.2839C87.5237 53.6024 86.3271 55.9208 85.0265 58.1874ZM90.6279 55.9381C91.5643 58.2566 92.362 60.5751 93.021 62.8244C90.7493 63.3781 88.3561 63.8453 85.8762 64.2086C86.726 62.8763 87.5757 61.5095 88.3734 60.108C89.1712 58.7238 89.9169 57.3223 90.6279 55.9381ZM73.0434 74.3996C71.4306 72.7386 69.8178 70.8873 68.2224 68.8629C69.7831 68.9321 71.3785 68.984 72.9913 68.984C74.6214 68.984 76.2342 68.9494 77.8123 68.8629C76.2516 70.8873 74.6388 72.7386 73.0434 74.3996ZM60.1411 64.2086C57.6786 63.8453 55.3028 63.3954 53.031 62.8417C53.6726 60.6097 54.4704 58.3086 55.3721 56.0074C56.0831 57.3915 56.8288 58.7757 57.6439 60.1599C58.459 61.5441 59.2914 62.8936 60.1411 64.2086ZM72.9566 28.2027C74.5694 29.8637 76.1822 31.7151 77.7776 33.7394C76.2169 33.6702 74.6215 33.6183 73.0087 33.6183C71.3785 33.6183 69.7658 33.6529 68.1877 33.7394C69.7484 31.7151 71.3612 29.8637 72.9566 28.2027ZM60.1238 38.3937C59.274 39.726 58.4243 41.0929 57.6266 42.4943C56.8288 43.8785 56.0831 45.2627 55.3721 46.6469C54.4357 44.3284 53.638 42.0099 52.979 39.7606C55.2507 39.2242 57.6439 38.7571 60.1238 38.3937ZM44.4295 60.0561C38.2905 57.4434 34.3193 54.0176 34.3193 51.3012C34.3193 48.5847 38.2905 45.1416 44.4295 42.5462C45.9209 41.9061 47.551 41.3351 49.2332 40.7987C50.2216 44.19 51.5223 47.7196 53.135 51.3358C51.5396 54.9346 50.2563 58.447 49.2852 61.8209C47.5684 61.2845 45.9382 60.6963 44.4295 60.0561ZM53.7593 84.7809C51.4009 83.4314 50.3777 78.2926 51.1754 71.6832C51.3662 70.0567 51.6783 68.3438 52.0599 66.5963C55.4588 67.4268 59.17 68.067 63.0719 68.4822C65.413 71.6832 67.8408 74.5899 70.286 77.1333C64.6326 82.3759 59.326 85.2481 55.719 85.2481C54.9386 85.2308 54.2796 85.0751 53.7593 84.7809ZM94.8939 71.5966C95.709 78.2061 94.7032 83.3448 92.362 84.7117C91.8418 85.0232 91.1655 85.1616 90.3677 85.1616C86.778 85.1616 81.4541 82.3067 75.8007 77.0987C78.2285 74.5553 80.6564 71.6659 82.9628 68.4649C86.8821 68.0497 90.5932 67.4095 93.9922 66.5617C94.391 68.3092 94.7032 69.9875 94.8939 71.5966ZM101.57 60.0561C100.079 60.6963 98.449 61.2672 96.7668 61.8036C95.7784 58.4124 94.4777 54.8827 92.8649 51.2666C94.4604 47.6677 95.7437 44.1553 96.7148 40.7814C98.4316 41.3178 100.062 41.9061 101.588 42.5462C107.727 45.1589 111.698 48.5847 111.698 51.3012C111.681 54.0176 107.709 57.4607 101.57 60.0561Z\" fill=\"white\"/>\n            <path d=\"M72.9913 59.208C77.3683 59.208 80.9165 55.6679 80.9165 51.3009C80.9165 46.9339 77.3683 43.3938 72.9913 43.3938C68.6144 43.3938 65.0662 46.9339 65.0662 51.3009C65.0662 55.6679 68.6144 59.208 72.9913 59.208Z\" fill=\"white\"/>\n            </svg>\n            {/* p5 */}\n            <svg width=\"103\" height=\"111\" viewBox=\"0 0 103 111\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M31.8065 62.3188C31.0748 61.327 30.1508 60.5246 29.0316 59.9141C27.913 59.3047 26.602 59 25.097 59C23.6774 59 22.4075 59.316 21.2899 59.9487C20.1713 60.5814 19.2137 61.3951 18.4193 62.3869C17.6223 63.381 17.0208 64.5102 16.6123 65.7749C16.2026 67.0397 16 68.305 16 69.5687C16 70.8334 16.2026 72.0868 16.6123 73.3278C17.0208 74.571 17.6223 75.6882 18.4193 76.6823C19.2143 77.6753 20.1713 78.4776 21.2899 79.0859C22.4075 79.6964 23.6774 80 25.097 80C26.602 80 27.913 79.6851 29.0316 79.0524C30.1502 78.4198 31.0748 77.6072 31.8065 76.6131C32.5372 75.6201 33.0857 74.491 33.452 73.2262C33.8173 71.9614 34 70.6972 34 69.4325C34 68.1677 33.8173 66.9143 33.452 65.6722C33.0857 64.4307 32.5372 63.3129 31.8065 62.3188Z\" fill=\"white\"/>\n            <path d=\"M0 0V111H103V0H0ZM40.3519 77.0487C39.6446 79.1989 38.6354 81.0714 37.3271 82.6667C36.0187 84.262 34.4316 85.5355 32.5648 86.4813C30.6979 87.4289 28.5836 87.903 26.2251 87.903C24.0358 87.903 22.0304 87.4173 20.2067 86.4471C18.3819 85.4757 16.9775 84.1586 15.991 82.4924H15.8627V103.579H8.13917V53.6397H15.5403V58.2863H15.7339C16.1193 57.6397 16.6234 56.9803 17.246 56.3099C17.8687 55.6394 18.6304 55.0387 19.5317 54.506C20.432 53.9761 21.4514 53.5357 22.5884 53.1883C23.7242 52.8421 25.0019 52.6678 26.4181 52.6678C28.6062 52.6678 30.6224 53.1192 32.4683 54.0203C34.313 54.9237 35.9006 56.1606 37.2317 57.7321C38.5605 59.3048 39.5902 61.1546 40.3206 63.2809C41.0495 65.4084 41.4144 67.6974 41.4144 70.148C41.4144 72.5985 41.0603 74.898 40.3519 77.0487ZM73.5436 78.1584C72.6633 80.3086 71.4724 82.1241 69.9711 83.6026C68.4686 85.0835 66.7091 86.217 64.6929 87.0025C62.6767 87.7879 60.5306 88.1813 58.2572 88.1813C54.4372 88.1813 51.2183 87.2203 48.6021 85.3026C46.8016 83.9832 45.3444 82.3204 44.2145 80.3335L49.8032 74.6894L49.8895 74.6551C50.5326 76.5979 51.6049 78.1578 53.1073 79.3372C54.6087 80.516 56.3903 81.1062 58.4497 81.1062C59.6076 81.1062 60.702 80.8988 61.7316 80.4811C62.7624 80.0657 63.6627 79.4656 64.4357 78.6778C65.2077 77.8923 65.819 76.9087 66.2697 75.7311C66.7204 74.5523 66.9457 73.2225 66.9457 71.7427C66.9457 69.8465 66.6444 68.2738 66.0444 67.0259C65.4433 65.7779 64.6611 64.7711 63.6955 64.0089C62.73 63.2466 61.6454 62.7139 60.4454 62.4135C59.2437 62.1126 58.0206 61.9633 56.7769 61.9633C55.9176 61.9633 55.007 62.0324 54.0415 62.1707C53.076 62.3101 52.1315 62.5065 51.2092 62.761C50.2857 63.0154 49.3854 63.3047 48.5062 63.6266C47.6258 63.9514 46.8425 64.2982 46.1574 64.6671L46.9293 37.8258H72.8665V45.3156H54.2658L53.8162 55.9288C54.545 55.6975 55.4135 55.536 56.4222 55.4419C57.4308 55.3513 58.3424 55.3036 59.1575 55.3036C61.3888 55.3036 63.4589 55.6511 65.3683 56.3442C67.2773 57.0372 68.9409 58.0441 70.356 59.3611C71.7733 60.6799 72.8768 62.2991 73.6703 64.2163C74.4644 66.1364 74.8612 68.3435 74.8612 70.8405C74.8617 73.5693 74.4218 76.0082 73.5436 78.1584ZM93.6991 50.5885L90.8727 52.7973L87.9352 48.608L85.0715 52.6899L82.3184 50.4299L85.106 46.3166L80.582 44.558L81.6499 41.017L86.1885 42.5938V37.5347H89.8295V42.6013L94.3347 41.1361L95.4015 44.6742L90.9093 46.3259L93.6991 50.5885Z\" fill=\"white\"/>\n            </svg>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Skill\n","import React, {useEffect} from 'react'\nimport Aos from 'aos';\nimport 'aos/dist/aos.css'\nimport '../styles/contact.scss'\n\nfunction Contact() {\n    useEffect(() => {\n        Aos.init({duration:1000});\n    },[])\n    return (\n        <>\n            <div className = 'contact-section'>\n                <div data-aos='fade-up' className = 'line'/>\n                <h3 data-aos='fade-up' className= 'title'>Contact Me</h3>\n                <div data-aos='fade' className = 'contact-svg'>\n                    {/* gmail */}\n                    <a  href=\"mailto:neeleshsingh767@gmail.com\">\n                        <svg width=\"100\" height=\"100\" viewBox=\"0 0 133 148\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M124.567 16.9951H8.43303C3.78323 16.9951 0 21.205 0 26.3792V121.62C0 126.795 3.78323 131.005 8.43303 131.005H124.567C129.217 131.005 133 126.795 133 121.62V26.3792C133 21.205 129.217 16.9951 124.567 16.9951ZM113.743 22.3061L66.5 60.623L19.2572 22.3061H113.743ZM14.9544 125.694H8.43303C6.41491 125.694 4.77267 123.866 4.77267 121.62V39.0809L14.9544 47.3392V125.694V125.694ZM113.273 125.694H19.7274V51.2106L65.0947 88.0071C65.5131 88.3467 66.0064 88.5167 66.5 88.5167C66.9936 88.5167 67.4871 88.3467 67.9053 88.0071L113.273 51.2103V125.694ZM128.227 121.62C128.227 123.866 126.585 125.694 124.567 125.694H118.046V47.3392L128.227 39.0809V121.62V121.62ZM128.227 32.5091L66.5 82.575L4.77267 32.5091V26.3792C4.77267 24.1335 6.41491 22.3061 8.43303 22.3061H11.1543L65.0947 66.0551C65.5134 66.3947 66.0064 66.5647 66.5 66.5647C66.9936 66.5647 67.4866 66.3947 67.9053 66.0551L121.845 22.3061H124.567C126.585 22.3061 128.227 24.1335 128.227 26.3792V32.5091H128.227Z\" fill=\"white\"/>\n                        </svg>\n                    </a>\n                    <a  href=\"https://github.com/neelesh7singh\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        {/* github */}\n                        <svg width=\"100\" height=\"100\" viewBox=\"0 0 121 133\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M112.884 34.7468C107.474 24.558 100.135 16.4916 90.8665 10.5456C81.5965 4.59933 71.4764 1.62695 60.499 1.62695C49.5231 1.62695 39.3996 4.60024 30.1316 10.5456C20.8621 16.4913 13.524 24.558 8.11396 34.7468C2.70474 44.9352 0 56.0611 0 68.1241C0 82.6144 3.84618 95.6446 11.5405 107.218C19.234 118.792 29.1728 126.801 41.3561 131.245C42.7743 131.534 43.8241 131.331 44.5067 130.64C45.1896 129.948 45.5306 129.081 45.5306 128.043C45.5306 127.87 45.5171 126.312 45.4909 123.368C45.4639 120.423 45.4512 117.854 45.4512 115.663L43.6393 116.007C42.484 116.24 41.0267 116.338 39.2672 116.31C37.5086 116.284 35.6829 116.081 33.7926 115.704C31.9015 115.331 30.1426 114.465 28.5145 113.109C26.8871 111.752 25.7319 109.976 25.049 107.784L24.2613 105.792C23.7362 104.465 22.9096 102.992 21.7803 101.376C20.651 99.7597 19.509 98.6637 18.3538 98.0865L17.8023 97.6525C17.4347 97.3641 17.0937 97.0163 16.7784 96.6126C16.4633 96.209 16.2274 95.805 16.0698 95.4004C15.912 94.9956 16.0428 94.6635 16.4635 94.403C16.8843 94.1425 17.6447 94.016 18.7481 94.016L20.323 94.2747C21.3734 94.5061 22.6726 95.1972 24.2224 96.3524C25.7714 97.5067 27.0447 99.0073 28.0426 100.854C29.2511 103.221 30.7071 105.025 32.4147 106.266C34.1209 107.507 35.8412 108.127 37.574 108.127C39.3067 108.127 40.8032 107.983 42.0641 107.695C43.3236 107.407 44.5054 106.973 45.6087 106.396C46.0814 102.527 47.3682 99.5544 49.4682 97.4766C46.4751 97.1309 43.7841 96.6102 41.3939 95.9178C39.0051 95.2245 36.5365 94.0994 33.9899 92.5394C31.4419 90.9814 29.3281 89.0469 27.6481 86.739C25.9678 84.4298 24.5888 81.3983 23.513 77.6471C22.4367 73.8944 21.8984 69.5655 21.8984 64.6592C21.8984 57.6733 23.9733 51.7285 28.1221 46.8216C26.1786 41.5695 26.3621 35.6818 28.6731 29.159C30.1961 28.6389 32.4547 29.0292 35.4478 30.3275C38.4414 31.6264 40.6332 32.7391 42.0255 33.6617C43.4177 34.5839 44.5332 35.3655 45.3737 35.9993C50.2586 34.499 55.2998 33.7487 60.4985 33.7487C65.6972 33.7487 70.7394 34.499 75.6247 35.9993L78.618 33.9222C80.665 32.5362 83.0822 31.2661 85.864 30.1116C88.6473 28.9576 90.7757 28.6398 92.2469 29.1599C94.6092 35.683 94.8197 41.5704 92.8757 46.8225C97.0242 51.7294 99.0999 57.6757 99.0999 64.6601C99.0999 69.5664 98.5597 73.909 97.485 77.6905C96.409 81.4726 95.0181 84.5011 93.3119 86.7823C91.6037 89.0633 89.4765 90.9827 86.9298 92.5403C84.3826 94.0991 81.9132 95.2242 79.5244 95.9175C77.1345 96.6108 74.4435 97.1318 71.4504 97.4782C74.1803 100.075 75.5455 104.174 75.5455 109.773V128.041C75.5455 129.079 75.8738 129.945 76.531 130.637C77.1874 131.329 78.224 131.532 79.6422 131.242C91.8272 126.799 101.766 118.789 109.459 107.215C117.152 95.6421 120.999 82.612 120.999 68.1216C120.996 56.0602 118.29 44.9352 112.884 34.7468Z\" fill=\"white\"/>\n                        </svg>\n                    </a>\n                    <a  href=\"https://www.linkedin.com/in/neelesh7singh/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        {/* linkdin */}\n                        <svg width=\"100\" height=\"100\" viewBox=\"0 0 160 140\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M126.667 0H33.3333C14.9267 0 0 13.0608 0 29.1667V110.833C0 126.939 14.9267 140 33.3333 140H126.667C145.08 140 160 126.939 160 110.833V29.1667C160 13.0608 145.08 0 126.667 0ZM53.3333 110.833H33.3333V46.6667H53.3333V110.833ZM43.3333 39.27C36.8933 39.27 31.6667 34.6617 31.6667 28.98C31.6667 23.2983 36.8933 18.69 43.3333 18.69C49.7733 18.69 55 23.2983 55 28.98C55 34.6617 49.78 39.27 43.3333 39.27ZM133.333 110.833H113.333V78.1433C113.333 58.4967 86.6667 59.9842 86.6667 78.1433V110.833H66.6667V46.6667H86.6667V56.9625C95.9733 41.8775 133.333 40.7633 133.333 71.4058V110.833Z\" fill=\"#F9F9F9\"/>\n                        </svg>\n                    </a>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Contact\n","import React, { useEffect, useRef } from 'react'\nimport { TweenMax } from \"gsap\";\nimport './../styles/preloader.scss'\n\nfunction Preloader() {\n    let line = useRef(null);\n    let loader = useRef(null);\n    useEffect(() => {\n        TweenMax.from(line, 1, {x: '-100%'});\n        TweenMax.to(line, .5, {height: '100vh', delay:1, ease: 'power3.inOut'});\n        TweenMax.to(line, .7, {x: '100%', delay:1.5, ease: 'power3.inOut'});\n        TweenMax.to(line, 1, {opacity: 0, display: 'none', delay:2});\n        TweenMax.to(loader, 1, {opacity: 0, display: 'none', delay:2});\n    },[])\n    return (\n        <div className = 'loader' ref = {(el) => (loader = el)}>\n            <div className=\"line\" ref = {(el) => (line = el)}/>\n        </div>\n    )\n}\n\nexport default Preloader\n","import { lerp, getMousePos } from \"./utils\";\nimport { TweenMax, Power3 } from \"gsap\";\n\n// Grab the mouse position and set it to mouse state\nlet mouse = { x: 0, y: 0 };\nwindow.addEventListener(\"mousemove\", (ev) => (mouse = getMousePos(ev)));\nexport default class Cursor {\n    constructor(el) {\n        this.Cursor = el;\n        this.Cursor.style.opacity = 0;\n        this.cursorConfigs = {\n            x: { previous: 0, current: 0, amt: 0.2 },\n            y: { previous: 0, current: 0, amt: 0.2 },\n        };\n        this.onMouseMoveEv = () => {\n            this.cursorConfigs.x.previous = this.cursorConfigs.x.current = mouse.x;\n            this.cursorConfigs.y.previous = this.cursorConfigs.y.previous = mouse.y;\n\n            TweenMax.to(this.Cursor, {\n                duration: 1,\n                ease: Power3.easeOut,\n                opacity: 1,\n            });\n            // The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint.\n            requestAnimationFrame(() => this.render());\n            window.removeEventListener(\"mousemove\", this.onMouseMoveEv);\n        };\n\n        window.addEventListener(\"mousemove\", this.onMouseMoveEv)\n    }\n    render() {\n        this.cursorConfigs.x.current = mouse.x;\n        this.cursorConfigs.y.current = mouse.y;\n\n        // lerp\n        for (const key in this.cursorConfigs) {\n            // key will be x & y\n            // WTF IS LERP?\n            // Lerp - A lerp returns the value between two numbers at a specified, decimal midpoint:\n            this.cursorConfigs[key].previous = lerp(\n                this.cursorConfigs[key].previous,\n                this.cursorConfigs[key].current,\n                this.cursorConfigs[key].amt\n            );\n        }\n        // Setting the cursor x and y to our cursoer html element\n        this.Cursor.style.transform = `translateX(${this.cursorConfigs.x.previous}px) translateY(${this.cursorConfigs.y.previous}px)`;\n        // RAF\n        requestAnimationFrame(() => this.render());\n    }\n}","// Linear interpolation\nconst lerp = (a, b, n) => (1 - n) * a + n * b;\n\n// Gets the mouse position\nconst getMousePos = (e) => {\n    let posx = 0;\n    let posy = 0;\n    if (!e) e = window.event;\n    if (e.clientX || e.clientY) {\n        posx = e.clientX;\n        posy = e.clientY;\n    }\n    return { x: posx, y: posy };\n};\n// Get sibilings\nconst getSiblings = (e) => {\n    // for collecting siblings\n    let siblings = [];\n    // if no parent, return no sibling\n    if (!e.parentNode) {\n        return siblings;\n    }\n    // first child of the parent node\n    let sibling = e.parentNode.firstChild;\n    // collecting siblings\n    while (sibling) {\n        if (sibling.nodeType === 1 && sibling !== e) {\n            siblings.push(sibling);\n        }\n        sibling = sibling.nextSibling;\n    }\n    return siblings;\n};\n\nexport { lerp, getMousePos, getSiblings };","import React, { useRef, useEffect } from 'react'\nimport Banner from '../components/banner.jsx'\nimport Intro from '../components/intro.jsx';\nimport Works from '../components/works.jsx';\nimport Skill from '../components/skill.jsx';\nimport Contact from '../components/contact.jsx';\nimport Preloader from '../components/preloader.jsx';\n// import SkewScrolling from '../components/skewScrolling.jsx';\nimport Cursor from '../cursor';\nfunction HomePage(props) {\n  let c = useRef(null);\n  const app = useRef(null);\n  // console.log(prop);\n  useEffect(() => {\n    new Cursor(c);\n  }, [])\n\n    return (\n    <>\n    <Preloader />\n    <div ref={app} className=\"App\">\n      <div className=\"cursor\" ref={(el) => (c = el)} />\n      {/* <SkewScrolling> */}\n        <Banner />\n        <Intro />\n        <Works {...props}/>\n        <Skill />\n        <Contact />\n      {/* </SkewScrolling> */}\n    </div>\n    </>\n    )\n}\n\nexport default HomePage\n","import React, {useEffect, useRef} from 'react'\n// import SkewScrolling from '../components/skewScrolling.jsx'\nimport { TweenMax } from \"gsap\";\nimport {Link} from 'react-router-dom'\nimport Cursor from '../cursor';\nimport '../styles/project.scss'\n\n\nfunction Project({heading, about, code, website}) {\n  let c = useRef(null);\n  let whiteDiv = useRef(null);\n  useEffect(() => {\n    TweenMax.to(whiteDiv,.6,{x:'100%',ease:'power3.inOut', display: 'none'})\n    new Cursor(c);\n  }, [])\n    return (\n    <>\n      <div className=\"whiteDiv\" ref={(el) => {whiteDiv = el}}/>\n      <div className=\"App\">\n          <div className=\"cursor\" ref={(el) => (c = el)} />\n          {/* <SkewScrolling> */}\n          <Link to='/'>\n            <div className=\"backButton\">\n              <svg viewBox=\"0 0 85 85\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M42.5004 85C65.9345 85 84.9994 65.9343 84.9994 42.4998C84.9994 19.0657 65.9345 0 42.5004 0C19.0663 0 0.000976562 19.0657 0.000976562 42.4998C0.000976562 65.9343 19.0663 85 42.5004 85ZM42.5004 5.81791C62.7265 5.81791 79.1815 22.2733 79.1819 42.4998C79.1819 62.7263 62.7269 79.1817 42.5004 79.1821C22.2742 79.1817 5.81927 62.7263 5.81927 42.4994C5.81927 22.2737 22.2742 5.81791 42.5004 5.81791Z\" fill=\"white\"/>\n              <path d=\"M36.7928 60.7029C37.9289 61.8385 39.7708 61.8381 40.9065 60.7029C42.0429 59.5664 42.0429 57.7249 40.9061 56.5884L29.728 45.4107L62.0976 45.4076C63.7042 45.4072 65.0062 44.1051 65.0062 42.4979C65.0058 40.8913 63.7038 39.5897 62.0973 39.5897L29.7264 39.5928L40.9073 28.4127C42.0433 27.2767 42.0433 25.4343 40.9073 24.2987C40.3391 23.7308 39.5948 23.4465 38.8501 23.4465C38.1058 23.4465 37.3614 23.7308 36.7932 24.2983L20.647 40.4441C20.1013 40.9895 19.7949 41.7291 19.7949 42.501C19.7952 43.2728 20.1017 44.0121 20.6474 44.5586L36.7928 60.7029Z\" fill=\"white\"/>\n              </svg>\n            </div>\n          </Link>\n\n            <div className='heading'>\n              <h1>{heading}</h1>\n            </div>\n            <div className=\"about\">\n              <p>{about}</p>\n              <div className=\"svgs\">\n                <a href={code} rel=\"noopener noreferrer\" target=\"_blank\">\n                  <div className='item'>\n                    <svg width=\"127\" height=\"125\" viewBox=\"0 0 127 125\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M50.1078 87.5981C49.6281 87.5981 49.1449 87.4357 48.7506 87.1052L35.1829 75.7342C34.7148 75.3415 34.4457 74.768 34.4457 74.1623C34.4457 73.5577 34.716 72.9842 35.1829 72.5915L48.7506 61.2205C49.6316 60.4812 50.9549 60.586 51.7061 61.4532C52.456 62.3215 52.3507 63.6239 51.4685 64.3621L39.7764 74.1623L51.4685 83.9625C52.3507 84.7018 52.456 86.0043 51.7061 86.8714C51.2907 87.3516 50.701 87.5981 50.1078 87.5981Z\" fill=\"white\"/>\n                    <path d=\"M76.8922 87.5981C76.299 87.5981 75.7093 87.3516 75.2951 86.8714C74.5439 86.0043 74.6504 84.7018 75.5314 83.9625L87.2236 74.1623L75.5314 64.3621C74.6504 63.6239 74.5439 62.3215 75.2951 61.4532C76.0451 60.586 77.3695 60.4812 78.2494 61.2205L91.8171 72.5915C92.2851 72.9842 92.5542 73.5577 92.5542 74.1623C92.5542 74.768 92.2851 75.3415 91.8171 75.7342L78.2494 87.1052C77.8551 87.4357 77.3719 87.5981 76.8922 87.5981V87.5981Z\" fill=\"white\"/>\n                    <path d=\"M58.697 96.127C58.5531 96.127 58.408 96.1121 58.2618 96.0821C57.1292 95.8472 56.4038 94.752 56.6425 93.6373L65.0983 54.1222C65.337 53.0074 66.4485 52.2934 67.5823 52.5284C68.7148 52.7633 69.4403 53.8573 69.2016 54.9732L60.7458 94.4883C60.5375 95.4603 59.667 96.127 58.697 96.127V96.127Z\" fill=\"white\"/>\n                    <path d=\"M112.922 117.655H14.0778C6.31584 117.655 0 111.44 0 103.799V21.2265C0 13.5867 6.31584 7.37036 14.0778 7.37036H112.922C120.684 7.37036 127 13.5867 127 21.2265V103.799C127 111.44 120.684 117.655 112.922 117.655ZM14.0778 11.4977C8.62782 11.4977 4.1934 15.8623 4.1934 21.2265V103.799C4.1934 109.163 8.62782 113.528 14.0778 113.528H112.922C118.372 113.528 122.807 109.163 122.807 103.799V21.2265C122.807 15.8623 118.372 11.4977 112.922 11.4977H14.0778Z\" fill=\"white\"/>\n                    <path d=\"M124.903 40.4157H2.0967C0.938366 40.4157 0 39.4921 0 38.352C0 37.2131 0.938366 36.2883 2.0967 36.2883H124.903C126.062 36.2883 127 37.2131 127 38.352C127 39.4921 126.062 40.4157 124.903 40.4157Z\" fill=\"white\"/>\n                    <path d=\"M35.8241 30.5405C32.1665 30.5405 29.1888 27.6097 29.1888 24.0098C29.1888 20.4087 32.1665 17.479 35.8241 17.479C39.4828 17.479 42.4593 20.4087 42.4593 24.0098C42.4593 27.6097 39.4828 30.5405 35.8241 30.5405ZM35.8241 21.6064C34.4785 21.6064 33.3822 22.6843 33.3822 24.0098C33.3822 25.3353 34.4785 26.4132 35.8241 26.4132C37.1708 26.4132 38.2659 25.3353 38.2659 24.0098C38.2659 22.6843 37.1708 21.6064 35.8241 21.6064Z\" fill=\"white\"/>\n                    <path d=\"M15.4374 30.4773C11.7787 30.4773 8.80215 27.5476 8.80215 23.9465C8.80215 20.3455 11.7787 17.4158 15.4374 17.4158C19.0961 17.4158 22.0727 20.3455 22.0727 23.9465C22.0727 27.5476 19.0961 30.4773 15.4374 30.4773ZM15.4374 21.5431C14.0919 21.5431 12.9956 22.6222 12.9956 23.9465C12.9956 25.272 14.0919 26.3499 15.4374 26.3499C16.7841 26.3499 17.8793 25.272 17.8793 23.9465C17.8793 22.6222 16.7841 21.5431 15.4374 21.5431Z\" fill=\"white\"/>\n                    <path d=\"M56.2107 30.6029C52.5532 30.6029 49.5766 27.6732 49.5766 24.0721C49.5766 20.4722 52.5532 17.5425 56.2107 17.5425C59.8694 17.5425 62.8459 20.4722 62.8459 24.0721C62.8459 27.6732 59.8694 30.6029 56.2107 30.6029ZM56.2107 21.6687C54.8651 21.6687 53.77 22.7466 53.77 24.0721C53.77 25.3976 54.8651 26.4755 56.2107 26.4755C57.5574 26.4755 58.6525 25.3976 58.6525 24.0721C58.6525 22.7466 57.5574 21.6687 56.2107 21.6687Z\" fill=\"white\"/>\n                    </svg>\n                    <p>Code</p>\n                  </div>\n                </a>\n                <a href={website} rel=\"noopener noreferrer\" target=\"_blank\">\n                  <div className='item'>\n                    <svg width=\"125\" height=\"125\" viewBox=\"0 0 125 125\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M107.447 89.6493L106.991 90.399L106.143 90.1818C103.219 89.4023 97.0754 87.9266 88.6762 86.6879L87.4568 86.5082L87.6955 85.297C87.9916 83.7402 88.2639 82.1779 88.5064 80.6074L86.8945 75.249C86.496 78.5577 85.975 81.8521 85.3322 85.1156L85.1211 86.1868L84.034 86.0545C74.0235 84.6697 63.626 84.6421 63.626 84.6421V78.7766L62.4523 74.4265L61.3415 78.781L61.2704 84.6344C61.2704 84.6344 51.24 84.5771 40.4599 85.8714L39.369 86.0037L39.1617 84.9266C38.5283 81.6752 38.0156 78.3846 37.6187 75.0836L35.9577 80.2347C36.2124 81.8703 36.4924 83.5021 36.8061 85.1278L37.0371 86.3273L35.8259 86.5126C30.0376 87.3963 24.2983 88.6234 18.7763 90.1702L17.9141 90.4067L17.4527 89.6394C16.5155 88.0908 15.6847 86.4828 14.9113 84.8532H12.3071C20.8854 104.022 40.1292 117.416 62.4529 117.416C84.7727 117.416 104.018 104.022 112.6 84.8532H109.99C109.22 86.4927 108.388 88.0986 107.447 89.6493ZM44.8442 112.131L44.8817 112.113L42.364 111.066C33.6082 107.428 25.9731 101.475 20.2911 93.8439L19.2515 92.4531L20.9306 92.0054C25.8827 90.6873 31.1071 89.6184 36.4533 88.8213L37.5382 88.6614L37.783 89.7248C39.3023 96.4167 41.3657 103.083 43.9125 109.545L44.9186 112.098L45.2069 112.226L44.8442 112.131ZM61.2726 115.062L60.0433 115.011C55.9969 114.824 51.96 114.161 48.0421 113.044L47.7995 112.977C44.9704 106.099 41.8315 96.8169 40.1705 89.6355L39.8745 88.3494L41.1788 88.2017C47.2869 87.4856 53.6535 87.1046 60.0912 87.087L61.2731 87.0793V115.062H61.2726ZM64.8636 115.007L63.6265 115.058V87.0886L64.8261 87.1184C70.9341 87.2546 77.1448 87.7006 83.2947 88.4365L84.609 88.5903L84.3091 89.8687C82.6343 97.0363 79.2468 106.345 76.4154 113.161C72.6464 114.204 68.7539 114.831 64.8636 115.007ZM104.574 93.909C98.7959 101.639 91.0224 107.634 82.093 111.241L79.7947 112.174L79.8537 112.202L79.7627 112.232L80.5538 109.724C83.1045 103.271 85.1762 96.6196 86.6977 89.9552L86.9425 88.8996L88.0235 89.0534C95.0434 90.0655 100.534 91.2491 103.9 92.0622L105.634 92.4806L104.574 93.909Z\" fill=\"white\"/>\n                    <path d=\"M18.1076 34.3348L18.5673 33.6148L19.3898 33.826C22.574 34.643 27.816 35.8381 34.6958 36.9114L35.8419 37.0912L35.6843 38.2373C35.2366 41.4434 34.913 44.6849 34.6799 47.9341H36.1358H37.0233C37.2521 44.7974 37.5641 41.67 37.9919 38.5768L38.1578 37.4186L39.3138 37.5708C46.1953 38.4743 53.197 39.0013 60.1144 39.1353L61.2704 39.159V47.9346H63.626V39.1783L64.7941 39.1667C71.8234 39.127 78.7032 38.6772 85.2589 37.8332L86.4171 37.6893L86.5831 38.8436C86.9954 41.8464 87.2914 44.8867 87.5103 47.933H88.8874H89.862C89.631 44.7643 89.3196 41.6039 88.8874 38.4787L88.7297 37.3365L89.8719 37.1529C95.0941 36.3221 100.34 35.186 105.458 33.7813L106.296 33.5504L106.764 34.2841C110.773 40.568 113.375 47.6425 114.439 54.976L115.889 49.8724C110.169 25.6644 88.3863 7.58496 62.4523 7.58496C36.6622 7.58496 14.9802 25.4616 9.11084 49.4699L10.4918 54.7869C11.575 47.5317 14.15 40.5515 18.1076 34.3348ZM85.7942 15.424C92.7529 18.8904 98.9888 23.9709 103.807 30.1203L104.924 31.531L103.183 31.9869C98.851 33.1115 94.2501 34.0625 89.5114 34.8061L88.3692 34.9859L88.168 33.8414C86.8912 26.3563 85.2738 20.4571 84.1415 16.8292L83.3206 14.1952L85.7942 15.424ZM63.6265 9.9433L64.8597 10.0006C69.9931 10.2316 75.0439 11.2162 79.8697 12.9207L80.3967 13.1021L80.5863 13.6269C81.5671 16.3 84.0467 23.6589 85.8482 34.1L86.0533 35.3155L84.8339 35.4655C78.357 36.2764 71.6194 36.7025 64.8145 36.7339L63.6287 36.7361L63.6265 9.9433ZM44.0867 13.246L44.6077 13.0563C49.5575 11.2647 54.7522 10.2371 60.0399 9.99842L61.2731 9.94109V36.7235L60.0697 36.6937C53.3613 36.552 46.5272 36.0393 39.7604 35.1711L38.5432 35.0151L38.7543 33.7995C40.4588 24.0101 42.7141 17.0453 43.9015 13.7664L44.0867 13.246ZM21.1181 30.0889C25.8314 24.0933 31.8998 19.0999 38.6688 15.6534L41.149 14.3865L40.3265 17.0481C39.2394 20.558 37.6749 26.2697 36.4164 33.5454L36.2174 34.6838L35.079 34.5079C29.2113 33.606 24.6048 32.6237 21.7735 31.9588L19.9703 31.5404L21.1181 30.0889Z\" fill=\"white\"/>\n                    <path d=\"M17.2746 66.6453C18.2355 63.6916 19.0916 60.8526 19.7724 57.556H19.8909C20.5696 60.7936 21.3645 63.5241 22.3314 66.5919L26.5337 79.7138H31.0795L39.9456 52.2153H35.0013L31.079 66.0197C30.1677 69.2611 29.4334 72.1575 28.9737 74.9414H28.8061C28.1848 72.1575 27.3855 69.2573 26.3678 65.9667L22.0982 52.2153H17.8981L13.4036 66.2468C12.4979 69.2043 11.5883 72.1536 10.9653 74.9376H10.7895C10.2845 72.0963 9.54249 69.2534 8.74756 66.1878L5.11358 52.2092H0L8.29386 79.7077H12.8396L17.2746 66.6453Z\" fill=\"white\"/>\n                    <path d=\"M71.5003 74.9391H71.3289C70.7076 72.159 69.9066 69.2571 68.8862 65.9661L64.621 52.2146H60.4264L55.9341 66.2477C55.0267 69.2015 54.111 72.1568 53.4897 74.9363H53.32C52.8111 72.0973 52.0691 69.2544 51.272 66.1866L47.632 52.2124H42.52L50.8183 79.7109H55.3641L59.7974 66.6425C60.7643 63.6888 61.6182 60.8497 62.3013 57.5531H62.4115C63.0962 60.7907 63.8911 63.5212 64.8558 66.589L69.0521 79.7109H73.6034L82.4717 52.2124H77.5235L73.6034 66.0168C72.6938 69.2571 71.9562 72.159 71.5003 74.9391Z\" fill=\"white\"/>\n                    <path d=\"M120.044 52.2153L116.124 66.0196C115.211 69.2611 114.477 72.1575 114.027 74.9414H113.856C113.234 72.1575 112.437 69.2573 111.411 65.9667L107.15 52.2153H102.951L98.4629 66.2468C97.5533 69.2043 96.6399 72.1536 96.0202 74.9376H95.8466C95.3378 72.0963 94.5919 69.2534 93.8008 66.1878L90.1647 52.2114H85.0527L93.3411 79.7099H97.8924L102.323 66.6431C103.286 63.6878 104.143 60.8487 104.827 57.5521H104.944C105.628 60.7914 106.419 63.5202 107.384 66.5919L111.584 79.7099H116.13L125 52.2114H120.044V52.2153Z\" fill=\"white\"/>\n                    </svg>\n                    <p>Website</p>\n                  </div>\n                </a>\n              </div>\n            </div>\n\n\n          {/* </SkewScrolling> */}\n      </div>\n    </>\n    )\n}\n\nexport default Project\n","import React from 'react';\nimport './styles/App.scss';\nimport Background from './components/background'\nimport HomePage from './pages/homePage';\nimport Project from './pages/project'\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const project1 = {\n    heading: 'Pathfinding Visualizer',\n    about: 'I built this project because I was fascinated by pathfinding algorithms and I wanted to visualize them in action. This project was created using only vanilla JavaScript. We can create a maze by our own or can let the website create one for us. I have implemented 4 different pathfinding algorithms: Depth First Search, Breadth First Search, Dijkstra, A*, and Recursive Division for maze generation.',\n    code: 'https://github.com/neelesh7singh/Pathfinding-Visualizer',\n    website: 'https://neelesh7singh.github.io/Pathfinding-Visualizer/'\n  }\n  const project2 = {\n    heading: 'Flappy Bird AI',\n    about: 'I coded a AI for Flappy Bird which I made using p5.js. The AI uses NeuroEvolution of Augmenting Topologies algorithm to learn. The birds are trained using a neural network library that I coded myself using only vanilla JavaScript.',\n    code: 'https://github.com/neelesh7singh/flappy-bird-ai',\n    website: 'https://neelesh7singh.github.io/flappy-bird-ai/'\n  }\n  const project3 = {\n    heading: '2D Self-Driving Car',\n    about: 'I used TensorFlow.js to train 2d cars move on a track without touching the edges. The car can get the information about the track using raycasting and the tracks are generated automatically using perlin noise.',\n    code: 'https://github.com/neelesh7singh/2d-AI-cars',\n    website: 'https://neelesh7singh.github.io/2d-AI-cars/'\n  }\n  return (\n    <>\n      <Background />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/project1\" render={() => <Project {...project1} />} />\n        <Route exact path=\"/project2\" render={() => <Project {...project2} />} />\n        <Route exact path=\"/project3\" render={() => <Project {...project3} />} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}