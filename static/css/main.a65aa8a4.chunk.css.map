{"version":3,"sources":["main.a65aa8a4.chunk.css","index.css","App.scss","background.scss","banner.scss","breakpoints.scss","intro.scss","works.scss","skill.scss","contact.scss","preloader.scss","project.scss"],"names":[],"mappings":"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","file":"main.a65aa8a4.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500&display=swap);\n* {\n  margin: 0px;\n  padding: 0px;\n  color: white;\n}\n\nbody {\n  margin: 0;\n  /* font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif; */\n  /* font-family: 'Noto Sans JP', sans-serif; */\n  font-family: 'Noto Sans KR', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  /* background: linear-gradient(#39684f, #2d513e); */\n  background-color: #141616;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n.cursor{position:fixed;top:0px;left:0px;z-index:10;contain:layout style size;pointer-events:none}.cursor:before{content:'';position:absolute;top:-24px;left:-24px;display:block;width:48px;height:48px;transform:scale(0.2);background:white;border-radius:50%}.cursor .cursor-media{display:block;height:350px;width:350px;overflow:hidden;transform:scale(0);margin:-175px 0 0 -175px;position:relative}\n\n.particles{pointer-events:none;position:fixed;top:0;left:0;width:100vw;height:100vh}\n\n.top-bar{padding:15px;padding-left:20px;font-size:20px;margin-bottom:7%}@media (max-width: 799px){.top-bar{margin-bottom:7%}}.hi{overflow:hidden}.hi h1{display:inline-block;line-height:720px;font-size:720px;font-weight:400}@media (max-width: 1499px){.hi h1{font-size:600px}}@media (max-width: 799px){.hi h1{line-height:300px;font-size:300px}}\n\n.intro .part-1{margin-top:250px;margin-left:50px;width:70vw;font-size:75px;font-weight:400}@media (max-width: 1499px){.intro .part-1{font-size:65px;width:80vw}}@media (max-width: 799px){.intro .part-1{margin-left:20px;width:90vw;margin-top:70px;font-size:30px}}\n\n.exitdiv{position:fixed;height:1000vh;width:0px;top:0px;left:0px;background-color:#fff}.workSection{margin-top:250px;padding-bottom:200px}.workSection .line{margin-left:50px;margin-bottom:10px;width:770px;border-width:2px;border-style:solid;border-color:white;border-left:none;border-right:none;border-bottom:none}@media (max-width: 799px){.workSection .line{width:100%;margin-left:0px}}.workSection .title{font-size:50px;font-weight:400;margin-left:600px}@media (max-width: 799px){.workSection .title{margin-left:20px}}.workSection .project{margin-top:170px;margin-left:30vw;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;text-align:center}@media (max-width: 799px){.workSection .project{margin-left:1vw;margin-top:170px}}.workSection .project-title{cursor:pointer;font-size:60px;font-weight:500}@media (max-width: 799px){.workSection .project-title{font-size:40px}}.workSection .project-skills{width:100%;margin-top:10px;overflow:hidden}@media (max-width: 799px){.workSection .project-skills{font-size:17px}}.workSection .right{margin-left:45vw}@media (max-width: 1499px){.workSection .right{margin-left:30vw}}@media (max-width: 799px){.workSection .right{margin-left:1vw}}\n\n.skillSection{display:flex;flex-direction:column;padding-bottom:200px}@media (max-width: 799px){.skillSection{padding-bottom:120px}}.skillSection .line-right{align-self:flex-end;margin-right:50px;margin-bottom:10px;width:770px;border-width:2px;border-style:solid;border-color:white;border-left:none;border-right:none;border-bottom:none}@media (max-width: 799px){.skillSection .line-right{width:100%;margin-right:0px}}.skillSection .title{align-self:flex-end;margin-right:50px;font-size:50px;font-weight:400;margin-left:600px}@media (max-width: 799px){.skillSection .title{margin-left:20px;align-self:start}}.skillSection .skill-about{margin-top:150px;width:60vw;margin-left:50px;font-size:45px;margin-bottom:70px}@media (max-width: 1499px){.skillSection .skill-about{width:70vw}}@media (max-width: 799px){.skillSection .skill-about{font-size:30px;width:90vw;margin-left:20px;margin-top:120px}}.skillSection .skill-svg{display:flex;justify-content:space-evenly;align-items:center}a{text-decoration:none}\n\n.contact-section{margin-left:50px}@media (max-width: 799px){.contact-section{margin-left:20px}}.contact-section .line{margin-bottom:10px;width:770px;border-width:2px;border-style:solid;border-color:white;border-left:none;border-right:none;border-bottom:none}@media (max-width: 799px){.contact-section .line{width:100vw;margin-left:-20px}}.contact-section .title{font-size:50px;font-weight:400;margin-left:510px;margin-bottom:100px}@media (max-width: 799px){.contact-section .title{margin-left:20px}}.contact-section .contact-svg{display:flex;justify-content:space-evenly;margin-bottom:70px}.extra{height:190px;display:flex;flex-direction:row;align-items:flex-end}.extra p{margin-left:50vw;transform:translateX(-50%);font-size:20px}\n\n.loader{background-color:#141616;position:fixed;top:0;left:0;bottom:0;width:100vw;height:100vh;z-index:3;display:flex;justify-content:center;flex-direction:column;overflow:hidden}.loader .line{width:100vw;height:1px;background:white}.loader .line-black{width:100vw;height:0px;background:#141616}\n\n.whiteDiv{position:fixed;top:0;left:0;background-color:#fff;height:100vh;width:100vw}.heading{margin-top:20vh;margin-bottom:70px;text-align:center}@media (max-width: 799px){.heading{margin-top:10vh}}.heading h1{font-size:150px;font-weight:400}@media (max-width: 799px){.heading h1{font-size:50px}}.backButton{position:absolute;right:50px;top:50px;height:70px;width:70px}@media (max-width: 799px){.backButton{height:50px;width:50px;left:20px;top:20px}}.about{width:70vw;margin-left:15vw;font-size:25px;text-align:center}@media (max-width: 799px){.about{width:90vw;margin-left:20px}}.about .svgs{margin-top:70px;display:flex;padding:0 250px;justify-content:space-between}@media (max-width: 799px){.about .svgs{padding:0 20px}.about .svgs svg{height:70px}}.about .svgs .items{display:flex;flex-direction:column}a{text-decoration:none}\n\n","* {\n  margin: 0px;\n  padding: 0px;\n  color: white;\n}\n\nbody {\n  margin: 0;\n  /* font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif; */\n  /* font-family: 'Noto Sans JP', sans-serif; */\n  font-family: 'Noto Sans KR', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  /* background: linear-gradient(#39684f, #2d513e); */\n  background-color: #141616;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500&display=swap');\n@import './breakpoints.scss';\n\n.cursor {\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  z-index: 10;\n  contain: layout style size;\n  pointer-events: none;\n  &:before {\n    content: '';\n    position: absolute;\n    top: -24px;\n    left: -24px;\n    display: block;\n    width: 48px;\n    height: 48px;\n    transform: scale(0.2);\n    background: white;\n    border-radius: 50%;\n  }\n  .cursor-media {\n    display: block;\n    height: 350px;\n    width: 350px;\n    overflow: hidden;\n    transform: scale(0);\n    margin: -175px 0 0 -175px;\n    position: relative;\n  }\n}\n\n// for skew scrolling\n// .App {\n//   position: fixed;\n//   top: 0;\n//   left: 0;\n//   height: 100%;\n//   width: 100%;\n//   overflow: hidden;\n// }\n",".particles {\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n}\n","@import './breakpoints.scss';\n.top-bar {\n  padding: 15px;\n  padding-left: 20px;\n  font-size: 20px;\n  margin-bottom: 7%;\n  @include media('<800px') {\n    margin-bottom: 7%;\n  }\n}\n.hi {\n  overflow: hidden;\n  h1 {\n    display: inline-block;\n    line-height: 720px;\n    font-size: 720px;\n    font-weight: 400;\n    @include media('<1500px') {\n      font-size: 600px;\n    }\n    @include media('<800px') {\n      line-height: 300px;\n      font-size: 300px;\n    }\n  }\n}\n","$breakpoints: (\n  'phone': 360px,\n  'tablet': 768px,\n  'desktop': 1366px,\n  'LGdesktop': 1920px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'retina2x': (\n    '(-webkit-min-device-pixel-ratio: 2)',\n    '(min-resolution: 192dpi)',\n  ),\n  'retina3x': (\n    '(-webkit-min-device-pixel-ratio: 3)',\n    '(min-resolution: 350dpi)',\n  ),\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: '';\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + ', ';\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: '';\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + ' and ';\n    }\n\n    @if (type-of($expression) == 'string') {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == 'list') {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == 'list') {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: '';\n  $value: '';\n  $element: '';\n  $result: '';\n  $is-width: true;\n\n  @if (type-of($expression) != 'string') {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == '=') {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == '>') {\n      $element: '(min-width: #{$result + $interval})';\n    } @else if ($operator == '<') {\n      $element: '(max-width: #{$result - $interval})';\n    } @else if ($operator == '>=') {\n      $element: '(min-width: #{$result})';\n    } @else if ($operator == '<=') {\n      $element: '(max-width: #{$result})';\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == '-' {\n      $minus: true;\n    } @else if $character == '.' {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != 'number' {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw'\n    'vh' 'vmin' 'vmax';\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != 'number' {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n\n/**\n*\n* Testing\n*\n**/\n","@import './breakpoints.scss';\n\n.intro {\n  .part-1 {\n    margin-top: 250px;\n    margin-left: 50px;\n    width: 70vw;\n    font-size: 75px;\n    font-weight: 400;\n    @include media('<1500px') {\n      font-size: 65px;\n      width: 80vw;\n    }\n    @include media('<800px') {\n      margin-left: 20px;\n      width: 90vw;\n      margin-top: 70px;\n      font-size: 30px;\n    }\n  }\n}\n","@import './breakpoints.scss';\n\n.exitdiv {\n  position: fixed;\n  height: 1000vh;\n  width: 0px;\n  top: 0px;\n  left: 0px;\n  background-color: #fff;\n  // display: none;\n}\n.workSection {\n  margin-top: 250px;\n  padding-bottom: 200px;\n  .line {\n    margin-left: 50px;\n    margin-bottom: 10px;\n    width: 770px;\n    border-width: 2px;\n    border-style: solid;\n    border-color: white;\n    border-left: none;\n    border-right: none;\n    border-bottom: none;\n    @include media('<800px') {\n      width: 100%;\n      margin-left: 0px;\n    }\n  }\n  .title {\n    font-size: 50px;\n    font-weight: 400;\n    margin-left: 600px;\n    @include media('<800px') {\n      margin-left: 20px;\n    }\n  }\n  .project {\n    margin-top: 170px;\n    margin-left: 30vw;\n    width: fit-content;\n    text-align: center;\n    @include media('<800px') {\n      margin-left: 1vw;\n      margin-top: 170px;\n    }\n    &-title {\n      cursor: pointer;\n      font-size: 60px;\n      font-weight: 500;\n      @include media('<800px') {\n        font-size: 40px;\n      }\n    }\n    &-skills {\n      width: 100%;\n      margin-top: 10px;\n      overflow: hidden;\n      @include media('<800px') {\n        font-size: 17px;\n      }\n    }\n  }\n  .right {\n    margin-left: 45vw;\n    @include media('<1500px') {\n      margin-left: 30vw;\n    }\n    @include media('<800px') {\n      margin-left: 1vw;\n    }\n  }\n}\n\n// .scroll {\n//   animation: animate 40s linear infinite;\n// }\n\n// @keyframes animate {\n//   0% {\n//     transform: translateX(100%);\n//   }\n//   100% {\n//     transform: translateX(-100%);\n//   }\n// }\n","@import './breakpoints.scss';\n\n.skillSection {\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 200px;\n  @include media('<800px') {\n    padding-bottom: 120px;\n  }\n  .line-right {\n    align-self: flex-end;\n    margin-right: 50px;\n    margin-bottom: 10px;\n    width: 770px;\n    border-width: 2px;\n    border-style: solid;\n    border-color: white;\n    border-left: none;\n    border-right: none;\n    border-bottom: none;\n    @include media('<800px') {\n      width: 100%;\n      margin-right: 0px;\n    }\n  }\n  .title {\n    align-self: flex-end;\n    margin-right: 50px;\n    font-size: 50px;\n    font-weight: 400;\n    margin-left: 600px;\n    @include media('<800px') {\n      margin-left: 20px;\n      align-self: start;\n    }\n  }\n  .skill-about {\n    margin-top: 150px;\n    width: 60vw;\n    margin-left: 50px;\n    font-size: 45px;\n    margin-bottom: 70px;\n    @include media('<1500px') {\n      width: 70vw;\n    }\n    @include media('<800px') {\n      font-size: 30px;\n      width: 90vw;\n      margin-left: 20px;\n      margin-top: 120px;\n    }\n  }\n  .skill-svg {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\na {\n  text-decoration: none;\n}\n","@import './breakpoints.scss';\n\n.contact-section {\n  margin-left: 50px;\n  @include media('<800px') {\n    margin-left: 20px;\n  }\n  .line {\n    margin-bottom: 10px;\n    width: 770px;\n    border-width: 2px;\n    border-style: solid;\n    border-color: white;\n    border-left: none;\n    border-right: none;\n    border-bottom: none;\n    @include media('<800px') {\n      width: 100vw;\n      margin-left: -20px;\n    }\n  }\n  .title {\n    font-size: 50px;\n    font-weight: 400;\n    margin-left: 510px;\n    margin-bottom: 100px;\n    @include media('<800px') {\n      margin-left: 20px;\n    }\n  }\n  .contact-svg {\n    display: flex;\n    justify-content: space-evenly;\n    margin-bottom: 70px;\n  }\n}\n.extra {\n  height: 190px;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  p {\n    margin-left: 50vw;\n    transform: translateX(-50%);\n    font-size: 20px;\n  }\n}\n",".loader {\n  background-color: #141616;\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 3;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  overflow: hidden;\n  .line {\n    width: 100vw;\n    height: 1px;\n    background: white;\n  }\n  .line-black {\n    width: 100vw;\n    height: 0px;\n    background: #141616;\n  }\n}\n","@import './breakpoints.scss';\n\n.whiteDiv {\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #fff;\n  height: 100vh;\n  width: 100vw;\n}\n.heading {\n  margin-top: 20vh;\n  margin-bottom: 70px;\n  text-align: center;\n  @include media('<800px') {\n    margin-top: 10vh;\n  }\n  h1 {\n    font-size: 150px;\n    font-weight: 400;\n    @include media('<800px') {\n      font-size: 50px;\n    }\n  }\n}\n\n.backButton {\n  position: absolute;\n  right: 50px;\n  top: 50px;\n  height: 70px;\n  width: 70px;\n  @include media('<800px') {\n    height: 50px;\n    width: 50px;\n    left: 20px;\n    top: 20px;\n  }\n}\n\n.about {\n  width: 70vw;\n  margin-left: 15vw;\n  font-size: 25px;\n  text-align: center;\n  @include media('<800px') {\n    width: 90vw;\n    margin-left: 20px;\n  }\n  .svgs {\n    margin-top: 70px;\n    display: flex;\n    padding: 0 250px;\n    justify-content: space-between;\n    @include media('<800px') {\n      padding: 0 20px;\n      svg {\n        height: 70px;\n      }\n    }\n    .items {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n}\n\na {\n  text-decoration: none;\n}\n"]}